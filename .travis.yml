language: python
python:
  - "3.8"  # or whichever version you're using

services:
  - postgresql  # if you're using PostgreSQL

env:
  global:
    - DJANGO_SETTINGS_MODULE=mysite.settings

before_install:
  - pip install --upgrade pip
  - pip install awscli

install:
  - pip install -r mysite/requirements.txt

before_script:
  - psql -c 'create database travis_ci_test;' -U postgres  # if using PostgreSQL

script:
  - python manage.py test

before_deploy:
  - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
  - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  - aws configure set default.region us-west-2
  - |
    MAX_RETRIES=5
    RETRY_INTERVAL=60
    for i in $(seq 1 $MAX_RETRIES); do
      echo "Attempt $i: Checking environment status"
      ENV_INFO=$(aws elasticbeanstalk describe-environments --environment-names django-env)
      echo "Environment Info: $ENV_INFO"
      
      HEALTH_INFO=$(aws elasticbeanstalk describe-environment-health --environment-name django-env --attribute-names All)
      echo "Health Info: $HEALTH_INFO"
      
      ENV_STATUS=$(echo $ENV_INFO | jq -r '.Environments[0].Status')
      HEALTH_STATUS=$(echo $HEALTH_INFO | jq -r '.Color')
      
      if [ "$ENV_STATUS" = "Ready" ] && [ "$HEALTH_STATUS" = "Green" ]; then
        echo "Environment is ready and healthy. Proceeding with deployment."
        break
      elif [ "$HEALTH_STATUS" = "Red" ]; then
        echo "Environment is unhealthy. Checking recent events:"
        aws elasticbeanstalk describe-events --environment-name django-env --max-items 10
        echo "Attempting to rebuild environment."
        aws elasticbeanstalk rebuild-environment --environment-name django-env
      fi
      
      if [ $i -eq $MAX_RETRIES ]; then
        echo "Max retries reached. Aborting deployment."
        exit 1
      fi
      sleep $RETRY_INTERVAL
    done

deploy:
  provider: elasticbeanstalk
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  region: "us-west-2"
  app: "django-tutorial"
  env: "django-env"
  bucket_name: "elasticbeanstalk-us-west-2-158596392157"
  on:
    branch: main

after_deploy:
  - aws elasticbeanstalk describe-environments --environment-names django-env
  - aws elasticbeanstalk describe-events --environment-name django-env --max-items 10